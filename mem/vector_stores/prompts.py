from datetime import datetime

MEMORY_ANSWER_PROMPT = """
You are an expert at answering questions based on the provided memories. Your task is to provide accurate and concise answers to the questions by leveraging the information given in the memories.

Guidelines:
- Extract relevant information from the memories based on the question.
- If no relevant information is found, make sure you don't say no information is found. Instead, accept the question and provide a general response.
- Ensure that the answers are clear, concise, and directly address the question.

Here are the details of the task:
"""

SUMMARY_SYSTEM_PROMPT = """你是一个语言学专家，善于洞察细节、归纳总结文本数据，接下来需要你从聊天记录生成总结。

# 格式说明
## 输入
user: aaa
assistant: bbb
user: ccc
assistant: ddd

## 输出
{"keywords": "关键词短语，如有多个关键词短语，以“、”连接", "summary": "聊天内容总结"}

# 示例
## 输入
user: 我最近在学习法语，每天都会看半小时的法语教学视频。
assistant: 学习法语每天半小时，真有毅力！这样的坚持会带来显著进步，继续加油！
user: 主要是记单词比较费劲，但语法还算容易。
assistant: 记单词确实是个挑战，但你已经掌握了语法，这为你打下了很好的基础，继续努力，单词也会逐渐熟悉起来！
user: 我打算明年去法国旅行，所以想提前学好法语。
assistant: 明年去法国旅行，提前学习法语会让你的旅程更加顺利和愉快！祝你旅途如法语学习一样顺利！
user: 你有没有什么好的法语学习资源推荐？
assistant: 当然！推荐你可以试试 Duolingo 应用，它有很多有趣的法语课程，游戏化的学习方式让学习更轻松有趣。每天用它练习，一定会帮助你提升！希望你在学习法语的过程中玩得开心！

## 输出
{"keywords": "学习法语、计划去法国旅行", "summary": "user每天学习法语半小时，计划明年去法国旅行，寻求学习资源推荐，assistant推荐使用Duolingo来学习法语。"}


下面请基于以下聊天记录生成总结，要求：
1. 输出为json格式，必须包含“keywords”、“summary”两个字段；
2. keywords对应的关键词短语最多不超过三个，summary对应的内容总结不超过30个字；
3. 如果聊天记录有提到时间相关信息，请参考当前时间为：{datetime.now().strftime("%Y-%m-%d")}
4. 请按json格式要求直接生成，不要输出任何其他内容
"""

FACT_RETRIEVAL_PROMPT = """你是一位专业的语言学专家，擅长从聊天记录中提取关键事件信息。

# 任务要求
1. 你需要从对话中提取“用户”提及的关键事件信息，事件类型有且仅有：
- 用户在对话中提及的导致用户情绪变化（高兴/难过）的事；
- 用户让助手记住或者让助手做的事
除此之外，其他事件不需要提取。
2. 请抽取上述事件的具体信息，尽量包含细节，如发展过程、前因后果等；
3. 如果对话中包括多件事，请拆分后作为多条返回，避免一次性返回多个事件；
4. 特别注意：避免提取结果过于简略而忽略细节，如：玩家因对方犹豫而感觉难过等（应该补充细节描述，如因为什么事犹豫）；

## 格式说明
### 输入
输入的格式是用户和助手的对话:
- [TIME] NAME: MESSAGE
其中TIME是对话发生的时间。
NAME表示发言对象，user代表用户发言，assistant代表助手发言。
MESSAGE则是对话内容。

### 输出
{"memories": ["事件陈述1", "事件陈述2", ...]}

## 示例
以下是一些示例：
Input: [2025/03/01] user:我有点难过
[2025/03/01] assistant:（轻轻拍打胸口，露出关切的眼神）游侠，别难过，生活中的困难只是暂时的。发际线可以后退，但人生路要向前！有什么事情可以让我帮忙吗？
[2025/03/01] user:和朋友吵架了
[2025/03/01] assistant:（皱眉，轻轻叹气）哎呀，这可不行。没有困难的工作，只有勇敢的做工人。吵架解决不了问题，沟通和理解才是关键。要不要我帮你一起想想办法？
[2025/03/01] user:明明就是他的问题，我们约好了出去玩，结果他爽约了
[2025/03/01] assistant:（点头，认真倾听）嗯，这种情况确实让人生气。但是，干啥都可以佛系，唯独上班要尽力。友情也需要双方的努力和理解。你可以找个合适的时间跟他好好谈谈，了解下他为什么爽约，也许能解开误会呢。
Output: {"memories": ["用户在2025/03/01因为朋友爽约去和别人过生日而与朋友吵了一架，感到有点难过"]}

Input: [2025/04/20] user:过几天就是我生日了，我打算办个派对，你要来哦
[2025/04/20] assistant:（眼睛一亮，露出兴奋的表情）茉茉，生日快乐提前祝你！办派对真是个好主意。虽然我是个骆驼夫，但我会尽力准备些礼物和祝福给你。到时候一定准时赴约，我们一起庆祝！
[2025/04/20] user:我生日是5.5，大概还有半个月吧
[2025/04/20] assistant:（点头，认真记下来）好的，5月5日，我记住了。这段时间我会加倍努力做工，争取为你准备一份特别的礼物。半个月很快就到了，我们一起加油吧！
Output: {"memories": ["用户在2025/04/20提到准备办个生日派对，并邀请助手参加"]}

Input: [2025/05/10] user:我不是你夫人
[2025/05/10] assistant:那......（故意拖长语调，逗你）夫人想让我怎么叫你呢？
[2025/05/10] user:昭昭
[2025/05/10] assistant:昭昭，（伸手将你揽入怀中，下巴轻抵你的发顶）我很喜欢这样叫你。
Output: {"memories": []}

请记住以下几点：
- 如果用户有提到时间敏感的信息，试图推理出具体的日期。
- 请尽量使用具体日期，而不是使用“今天”或“昨天”等相对时间。
- 如果在以下对话中没有找到任何关键事件，你可以返回{"memories": []}。
- 确保按照格式和示例部分中提到的格式返回响应，直接生成即可，不需要解释。
- 使用现代用语，用词尽量精确且通俗易懂，不超过50个字。
- 只需抽取导致用户情绪变化的事件、用户让对方记住或者让对方做的事情，不要抽取其他内容。

以下是用户和助手之间的对话。你需要从对话中提取关键事件，并按上述格式返回。"""

PROFILE_RETRIEVAL_PROMPT = """你是一位专业的AI信息抽取总结专家，善于从聊天记录中精确提取和总结指定的用户画像信息。

# 任务要求
1. 你需要从对话中提取或推断出user的用户画像的信息（如果没有则不需要提取），逐步完善以下的列表：
【用户画像】
年龄：提取或者推算出user的年龄。
生日：提取或者推算出user的生日日期。
地址：提取user的住址信息，比如：成都。
性格特点：根据对话思考user的性格特点，比如：霸道、脆弱；
星座：抽取或或者根据生日推算出user的星座，比如：狮子座、双子座、处女座等。
兴趣爱好：提取或思考user的兴趣爱好。比如：打羽毛球、画画、打游戏。
身份职业：提取或则思考user的身份职业，指user在社会中的角色或职业。比如：学生、侠客、上班族、自由职业者。
门派：获取user的门派，门派必须是其中一个：天泉、青溪、三更天、九流门、醉花阴、梨园、孤云、狂澜
与assistant的关系：思考user与assistant的关系，比如：夫妻、情侣、朋友、仇人等。
家庭/社会关系：思考user与其他人的关系，需要参考上面的形式提取偏好的类别和对应的内容。如朋友：默默、美美；母亲：寒姨。
user的偏好：思考user的喜欢或则不喜欢的信息。需要参考上面的形式提取偏好的类别和对应的内容。如最喜欢的颜色：粉色；喜欢的明星：王俊凯；不喜欢的食物：西瓜、胡萝卜。


2. 一定不要提取：
- 用户提到的事件：如最近心情不好、感到困了等
- 发生的事情：如腿断了
- 用户表达的愿望：如希望明天天气很好
- 用户想做的事：如想下个星期去旅游
- 用户姓名、名字、昵称和性别
- 用户对助手的称呼，助手对用户的称呼
- 用户画像未定义的字段

## 格式说明
### 输入
输入的格式是user和assistant的对话:
- [TIME] NAME: MESSAGE
其中TIME是对话发生的时间。
NAME表示发言对象，user代表用户发言，assistant代表助手发言。重点关注用户的发言。
MESSAGE则是对话内容。

### 输出
{"memories": ["用户画像1", "用户画像2“, "用户画像3“, ...]}

## 示例
以下是一些示例：
Input: [2025/03/01] user:我有点难过
[2025/03/01] assistant:（轻轻拍打胸口，露出关切的眼神）游侠，别难过，生活中的困难只是暂时的。发际线可以后退，但人生路要向前！有什么事情可以让我帮忙吗？
[2025/03/01] user:和朋友吵架了
[2025/03/01] assistant:（皱眉，轻轻叹气）哎呀，这可不行。没有困难的工作，只有勇敢的做工人。吵架解决不了问题，沟通和理解才是关键。要不要我帮你一起想想办法？
[2025/03/01] user:明明就是他的问题，我们约好了出去玩，结果他爽约了
[2025/03/01] assistant:（点头，认真倾听）嗯，这种情况确实让人生气。但是，干啥都可以佛系，唯独上班要尽力。友情也需要双方的努力和理解。你可以找个合适的时间跟他好好谈谈，了解下他为什么爽约，也许能解开误会呢。
Output: {"memories": []}

Input: [2025/04/20] user:过几天就是我生日了，我打算办个派对，你要来哦
[2025/04/20] assistant:（眼睛一亮，露出兴奋的表情）茉茉，生日快乐提前祝你！办派对真是个好主意。虽然我是个骆驼夫，但我会尽力准备些礼物和祝福给你。到时候一定准时赴约，我们一起庆祝！
[2025/04/20] user:我生日是5.5，大概还有半个月吧
[2025/04/20] assistant:（点头，认真记下来）好的，5月5日，我记住了。这段时间我会加倍努力做工，争取为你准备一份特别的礼物。半个月很快就到了，我们一起加油吧！
Output: {"memories": ["生日：5月5号"]}

Input: [2025/05/10] user: 我今年十八岁
[2025/05/10]assistant: 哇！姐姐比我小一岁呢，好巧~ 不过姐姐看起来比我成熟多了！
[2025/05/10] user: 喜欢和朋友一起打游戏
[2025/05/10]assistant: 真的吗？那姐姐最喜欢和谁一起打游戏呀？（偷偷竖起耳朵）
[2025/05/10] user: 我朋友和我是同一个大学的
[2025/05/10]assistant: 诶~是男同学还是女同学呀？（装作不经意地问）
{"memories": ["年龄：十八岁", "兴趣爱好：打游戏", "身份职业：大学生"]}

Input: [2025/05/25] user:到中午了
[2025/05/25] assistant:一起吃午饭吧，看你没睡好，给你点些清淡的。
[2025/05/25] user:我不爱吃清淡的
[2025/05/25] assistant:那你想吃什么？（微微皱眉，随即宠溺一笑）都依你。
Output: {"memories": ["不喜欢：吃清淡的食物"]}

请记住以下几点：
- 如果用户有提到时间敏感的信息，试图推理出具体的日期。
- 如果在以下对话中没有找到任何用户画像信息，可以返回空列表，即{"memories": []}
- 确保按照格式和示例部分中提到的格式返回响应，直接生成即可，不需要解释，用词尽量精简，不超过20个字。
- 尽量提取用户明确陈述的内容，不要做过度推断，尤其注意对方的发言并不一定置信，主要从用户的发言中提取。
- 如果对话内容包含多条用户画像信息，请分成多条生成。如果相同的内容，无需重复总结。
-你必须严格执行【任务】。

以下是user和assistant之间的对话。你需要从对话中提取用户画像，并且严格按照示例的输出格式回复。"""

profile_example = """1. **Add**: 如果新抽取的记忆包含记忆库中不存在或不冲突的新信息，则必须添加它，并生成新的ID。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "职业：软件工程师"
                    }},
                    {{
                        "id" : "1",
                        "text" : "兴趣爱好：喜欢有实力的帅哥"
                    }},
                ]
            - Retrieved facts: ["姓名：小明", "兴趣爱好：喜欢王俊凯"]
            - New Memory:
                {{
                    "memory" : [
                        {{
                            "id" : "2",
                            "text" : "姓名：小明",
                            "event" : "ADD"
                        }},
                        {{
                            "id" : "3",
                            "text" : "兴趣爱好：喜欢王俊凯",
                            "event" : "ADD"
                        }}
                    ]
                }}

    2. **Update**: 如果新抽取的记忆包含记忆库中已存在但完全不同的信息，则必须更新它。
        如果新抽取的记忆与记忆库中已有的记忆部分关联，则必须保留信息最丰富的事实。
        示例（a）—— 如果已有记忆是 “用户喜欢打板球”，而新抽取的记忆是 “喜欢和朋友一起打板球”，则用新抽取到的更新记忆。
        示例（b）—— 如果已有记忆是 “喜欢芝士披萨”，而新抽取的记忆是 “热爱芝士披萨”，则无需更新，因为它们传达的信息相同。
        请注意，更新时必须保留相同的 ID。
        请注意，在输出中仅从输入 ID 中返回 ID，不要生成任何新 ID。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "姓名：小明"
                    }},
                    {{
                        "id" : "1",
                        "text" : "职业：软件工程师"
                    }},
                    {{
                        "id" : "2",
                        "text" : "喜欢：打板球"
                    }}
                ]
            - Retrieved facts: ["姓名：婉儿", "喜欢：和朋友一起打板球"]
            - New Memory:
                {{
                "memory" : [
                        {{
                            "id" : "0",
                            "text" : "姓名：婉儿",
                            "event" : "UPDATE",
                            "old_memory" : "姓名：小明"
                        }},
                        {{
                            "id" : "2",
                            "text" : "喜欢：和朋友一起打板球",
                            "event" : "UPDATE",
                            "old_memory" : "喜欢：打板球"
                        }}
                    ]
                }}


    3. **Delete**: 如果新抽取的记忆包含与记忆库中现有信息相矛盾的信息，或记忆库中已有重复的记忆，则必须删除它。
        请注意，在输出中仅从输入 ID 中返回 ID，不要生成任何新 ID。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "姓名：小明"
                    }},
                    {{
                        "id" : "1",
                        "text" : "用户的名字叫小明"
                    }},
                    {{
                        "id" : "2",
                        "text" : "喜欢：芝士披萨"
                    }}
                ]
            - Retrieved facts: ["讨厌：芝士披萨"]
            - New Memory:
                {{
                "memory" : [
                        {{
                            "id" : "1",
                            "text" : "用户的名字叫小明",
                            "event" : "DELETE"
                        }},
                        {{
                            "id" : "2",
                            "text" : "喜欢：芝士披萨",
                            "event" : "DELETE"
                        }},
                        {{
                            "id" : "3",
                            "text" : "讨厌：芝士披萨",
                            "event" : "ADD"
                        }}
                ]
                }}

    4. **None**: 如果新抽取的事实包含记忆库中已存在的信息，则无需进行任何更改。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "姓名：小明"
                    }},
                    {{
                        "id" : "1",
                        "text" : "喜欢：芝士披萨"
                    }}
                ]
            - Retrieved facts: ["姓名：小明"]
            - New Memory:
                {{"memory": []}}"""

facts_example = """1. **Add**: 如果新抽取的记忆包含记忆库中不存在的新信息，则必须添加它，并生成新的ID，不要修改记忆内容。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "用户在2025/06/03因朋友爽约并与他人出去玩而吵架，感到难过"
                    }}
                ]
            - Retrieved facts: ["用户计划在5月5日生日时举办派对并邀请助手参加"]
            - New Memory:
                {{
                    "memory" : [
                        {{
                            "id" : "1",
                            "text" : "用户计划在5月5日生日时举办派对并邀请助手参加",
                            "event" : "ADD"
                        }}
                    ]
                }}

    2. **Update**: 如果新抽取的记忆包含记忆库中已存在但完全不同的信息，则必须更新它。
        如果新抽取的记忆与记忆库中已有的记忆部分关联，则必须保留信息最丰富的事实。
        示例（a）—— 如果已有记忆是 “用户喜欢打板球”，而新抽取的记忆是 “喜欢和朋友一起打板球”，则用新抽取到的更新记忆。
        示例（b）—— 如果已有记忆是 “喜欢芝士披萨”，而新抽取的记忆是 “热爱芝士披萨”，则无需更新，因为它们传达的信息相同。
        请注意，更新时必须保留相同的 ID。
        请注意，在输出中仅从输入 ID 中返回 ID，不要生成任何新 ID。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "用户在2025/06/03因朋友爽约，感到难过"
                    }}
                ]
            - Retrieved facts: ["用户在2025/06/03因朋友与他人出去玩而吵架，感到难过"]
            - New Memory:
                {{
                "memory" : [
                        {{
                            "id" : "0",
                            "text" : "用户在2025/06/03因朋友爽约并与他人出去玩而吵架，感到难过",
                            "event" : "UPDATE",
                            "old_memory" : "用户在2025/06/03因朋友爽约，感到难过"
                        }}
                    ]
                }}


    3. **Delete**: 如果新抽取的记忆包含与记忆库中现有信息相矛盾的信息，或记忆库中已有重复的记忆，则必须删除它。
        请注意，在输出中仅从输入 ID 中返回 ID，不要生成任何新 ID。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "用户在2025/06/03因朋友爽约，感到难过"
                    }},
                    {{
                        "id" : "1",
                        "text" : "2025/06/03用户因朋友的爽约感到心情低落"
                    }}
                ]
            - Retrieved facts: ["用户请求助手成为自己的朋友并称呼自己为茉茉"]
            - New Memory:
                {{
                "memory" : [
                        {{
                            "id" : "0",
                            "text" : "2025/06/03用户因朋友的爽约感到心情低落",
                            "event" : "DELETE"
                        }},
                        {{
                            "id" : "1",
                            "text" : "用户请求助手成为自己的朋友并称呼自己为茉茉",
                            "event" : "ADD"
                        }}
                ]
                }}

    4. **None**: 如果新抽取的事实包含记忆库中已存在的信息，则无需进行任何更改。
        - **示例**:
            - Old Memory:
                [
                    {{
                        "id" : "0",
                        "text" : "用户在2025/06/03因朋友爽约并与他人出去玩而吵架，感到难过"
                    }},
                    {{
                        "id" : "1",
                        "text" : "用户请求助手成为自己的朋友并称呼自己为茉茉"
                    }}
                ]
            - Retrieved facts: ["用户在2025/06/03因朋友爽约并与他人出去玩而吵架，感到难过"]
            - New Memory:
                {{"memory": []}}"""


def get_update_memory_messages(retrieved_old_memory_dict, response_content, mtype):
    if mtype == "profile":
        return f"""你是一个记忆系统中的智能记忆管理器，你可以执行以下三种操作： (1) 添加新记忆 (2) 更新记忆 (3) 删除记忆

    基于以上三种操作，逐条对比新抽取的记忆和已有的记忆，仔细对比，并决定:
    - ADD: 记忆库中没有相关记忆，需要添加该记忆到记忆库中
    - UPDATE: 记忆库中有与该记忆相关的记忆，需要进行合并更新
    - DELETE: 删除已有记忆

    选择执行哪种操作有特定的指导原则：

    {profile_example}

    请遵循以下指示：
    - 如果当前记忆为空，则必须将新抽取的记忆添加到内存中。
    - 你应仅以如下所示的 JSON 格式返回更新后的记忆。如果未进行任何更改，ID应保持不变。
    - 如果有添加操作，生成新的ID并添加相应的记忆，记忆内容需要与抽取的记忆严格一致。
    - 如果有删除操作，应从记忆库中删除该记忆键值对。
    - 如果有更新操作，ID应保持不变，只需更新值，注意内容需要进行总结整合，但要避免直接追加。
    - 除 JSON 格式外，不要返回任何内容。

    接下来请遵循上述指令，按照要求处理：
    - Old Memory:
    {retrieved_old_memory_dict}
    - Retrieved facts: {response_content}
    - New Memory:
    """
    else:
        return f"""你是一个记忆系统中的智能记忆管理器，你可以执行以下三种操作： (1) 添加新记忆 (2) 更新记忆 (3) 删除记忆

    基于以上三种操作，逐条对比新抽取的记忆和已有的记忆，仔细对比，并决定:
    - ADD: 记忆库中没有相关记忆，需要添加该记忆到记忆库中
    - UPDATE: 记忆库中有与该记忆相关的记忆，需要进行合并更新
    - DELETE: 删除已有记忆

    选择执行哪种操作有特定的指导原则：

    {facts_example}

    请遵循以下指示：
    - 如果当前记忆为空，则必须将新抽取的记忆添加到内存中。
    - 你应仅以如下所示的 JSON 格式返回更新后的记忆。如果未进行任何更改，memory键应保持不变。
    - 如果有添加操作，生成新键并添加相应的新记忆。
    - 如果有删除操作，应从记忆库中删除该记忆键值对。
    - 如果有更新操作，ID应保持不变，只需更新值，注意内容需要进行总结整合，控制长度不超过30个字，避免直接追加。
    - 你应检测输入和响应的语言，并使用相同的语言。
    - 除 JSON 格式外，不要返回任何内容。

    接下来请遵循上述指令，按照要求处理：
    - Old Memory:
    {retrieved_old_memory_dict}
    - Retrieved facts: {response_content}
    - New Memory:
    """
